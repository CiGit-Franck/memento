# or create a new repository on the command line
echo "# div-api" >> README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/CiGit-Franck/div-api.git
git push -u origin master

# or push an existing repository from the command line
git remote add origin https://github.com/CiGit-Franck/div-api.git
git push -u origin master

---
https://git-scm.com/docs
https://fr.wikibooks.org/wiki/Git/Premiers_pas
https://blog.nathanaelcherrier.com/fr/gitflow-la-methodologie-et-la-pratique/
---

# config
git config --global user.email "franck.thery@gmail.com"
git config --global user.name "CiGit-Franck"

# LF will be replaced by CRLF in pom.xml
git config core.autocrlf

# màj repository
git reset origin/master --hard
git pull --rebase
git add .
git commit -m "daily commit"
git push origin master

git checkout -b auth-cnx
git add .
git commit -m "[arca-cnx] commit"
git push --set-upstream origin arca-cnx

# travailler sur une branche
git branch
<<<<<<< HEAD
git checkout -b US-01-001/US-02-001/US-00-002
=======
git checkout -b US-01-001/US-02-001/US-04-001/US-02-002
>>>>>>> 8ca4cc3756a3cb33d09b5a40f9203bd0cfed7629

# committer une branch
git add .
git commit -m "[US-01-001] repo"
git push -u origin US-01-001

# changer de branche
git checkout ma-branche

# remiser les modifs locale
git reset --hard HEAD

# delete commit file
git reset <file>

# process develop
checkout develop
create branch evol-xxx
checkout evol-xxx
iter comit
> merge into develop
checkout develop
merge evol-xxx

# ================================
# Mode Gitflow
# ================================

# Je développe une fonctionnalité
# --------------------------------
git checkout -b <evol> develop
git checkout <evol>
>fin deve
git merge <evol> --no-ff
ou mieux si <evol> n'est qu'en local
git rebase develop <evol>
git checkout develop
git merge <evol>
>delete la branche
git branch -d <nom>

# Je met en prod une version
# --------------------------------
git checkout -b <version> develop
git checkout dev
git merge <version> --no-ff
>re7 ok
git checkout master
git merge <version> --no-ff
git tag <version>
>delete la branche
git branch -d <version>

# Tag / Release version
# --------------------------------
git tag -a 0.1 -m "version content"
git push origin 0.1

# Bug en prod
# --------------------------------
git checkout -b <name> master
git checkout dev
>fin correction
git merge <name> --no-ff
git checkout master
git merge <name> --no-ff
git tag <version>
>delete la branche
git branch -d <name>

# --------------------------------
# En automatique
# --------------------------------
git flow init
git flow feature start <nom>
git flow feature finish <nom>
git flow release start <nom>
git flow release finish <nom>
git flow hotfix start <nom>
git flow hotfix finish <nom>
# ================================
