instal node.js
npm config set proxy "http://a178423:<mdp>@138.21.88.176:3128"
npm install -g npm
npm install -g @angular/cli
set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser
ng new my-app
npm install @ngx-translate/core @ngx-translate/http-loader rxjs --save
ng serve --open
ng new stackmovie
ng add @angular/material
npm i -s @angular/flex-layout @angular/cdk
<<<<<<< HEAD
ng update @angular/cli
ng update @angular/core
ng update @angular/cli @angular/core --allow-dirty --force
ng generate component xyz
=======
ng update @angular/cli @angular/core --allow-dirty --forceng generate component xyz
>>>>>>> 5ae01dfc269848bac5f6c0b348ce21d4e651d1c4
ng generate service xyz 

> rebuild from git source
npm install --save-dev @angular-devkit/build-angular

# netbeans (Bof)
https://github.com/Chris2011/NBAngularCLI/releases
https://github.com/Everlaw/nbts/releases


[Module <--> Template]
- Component<A> Module<A> > Template<A> --> interpolaation : 
	Module<A> -> attribut = 'valeur'
	Template<A> -> {{ attribut }}
- Root module < Component<B> --> @Output() :
	Module<B> ->
		@Output() attribut = new EventEmmitter<type>();
		push(value) { this.attribut.emit(value); }
	Template<B> ->
		<select (change)="push($event.target.value">
	Module<root> ->
		attribut;
		consume(value: <type>) { this.attribut = value; }
	Template<root> ->
		<app-B (attribut)="consume($event)"></app-B>
- Root module > Component<C> --> @Input() :
	Module<root> ->
		attribut;		
	Template<root> ->
		<app-C (inValue)="attribut"></app-C>
	Module<C> ->
		@Input() inValue;
	Template<C> ->
		{{ this.inValue }}
- Root module <> Service --> Observable<any> :
	Service ->
		getData(selected: string): Observable<any> { return this.http.get(selected); }
	Module<root> ->
		constructor(private service: Service) {}
		consume(value: <type>) { this.service.getData(value).subscribe(values => (this.list = values.results)); }
	Template<root> > Component<D> via (@Input)->
		<app-D [data]="list"></app-D>
	Module<D> ->
		@Input() data;
	Template<D> ->
			<div *ngFor="let raw of data"> <h2>Ressource : {{ raw.url }}</h2> </div>
